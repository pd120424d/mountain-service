apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docs-aggregator.fullname" . }}
  labels:
    {{- include "docs-aggregator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
    type: {{ default "RollingUpdate" .Values.strategy.type }}
    {{- if or (eq (default "RollingUpdate" .Values.strategy.type) "RollingUpdate") .Values.strategy.rollingUpdate }}
    rollingUpdate:
      {{- with .Values.strategy.rollingUpdate.maxSurge }}
      maxSurge: {{ . }}
      {{- end }}
      {{- with .Values.strategy.rollingUpdate.maxUnavailable }}
      maxUnavailable: {{ . }}
      {{- end }}
    {{- end }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "docs-aggregator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "docs-aggregator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: docs-aggregator
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: docs-aggregator
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: EXTERNAL_SCHEME
              value: {{ .Values.env.EXTERNAL_SCHEME | quote }}
            - name: EXTERNAL_HOST
              value: {{ .Values.env.EXTERNAL_HOST | quote }}
            - name: EXTERNAL_BASE_PATH
              value: {{ .Values.env.EXTERNAL_BASE_PATH | quote }}
            - name: SERVICES_JSON
              value: {{ .Values.env.SERVICES_JSON | quote }}
            - name: CORS_ALLOWED_ORIGINS
              valueFrom: {secretKeyRef: {name: app-shared, key: CORS_ALLOWED_ORIGINS}}
          readinessProbe:
            httpGet: { path: /health, port: {{ .Values.service.port }} }
            initialDelaySeconds: 2
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /health, port: {{ .Values.service.port }} }
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

