apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "version-service.fullname" . }}
  labels:
    {{- include "version-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.strategy }}
  strategy:
    type: {{ default "RollingUpdate" .Values.strategy.type }}
    {{- if or (eq (default "RollingUpdate" .Values.strategy.type) "RollingUpdate") .Values.strategy.rollingUpdate }}
    rollingUpdate:
      {{- with .Values.strategy.rollingUpdate.maxSurge }}
      maxSurge: {{ . }}
      {{- end }}
      {{- with .Values.strategy.rollingUpdate.maxUnavailable }}
      maxUnavailable: {{ . }}
      {{- end }}
    {{- end }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "version-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "version-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: version-service
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: gcp-logging-writer-key
          secret:
            secretName: gcp-logging-writer-key
            items:
              - key: key.json
                path: key.json
      containers:
        - name: version
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # GCP Logging Configuration
            - name: GCP_LOGGING_ENABLED
              value: "true"
            - name: GCP_PROJECT_ID
              value: "reflecting-card-469410-q1"
            - name: LOG_TO_STDOUT_ONLY
              value: "true"
            - name: GCP_LOGGING_CREDENTIALS_PATH
              value: "/var/secrets/gcp-logging/key.json"
          volumeMounts:
            - name: gcp-logging-writer-key
              mountPath: /var/secrets/gcp-logging
              readOnly: true
          ports:
            - containerPort: {{ .Values.service.port }}
          readinessProbe:
            httpGet: { path: /api/v1/health, port: {{ .Values.service.port }} }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet: { path: /api/v1/health, port: {{ .Values.service.port }} }
            initialDelaySeconds: 15
            periodSeconds: 20
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

