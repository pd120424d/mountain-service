replicaCount: 1

image:
  repository: ghcr.io/pd120424d/employee-service
  tag: latest
  pullPolicy: Always

imagePullSecrets:
  - name: ghcr-auth


service:
  type: ClusterIP
  port: 8082

resources:
  requests:
    cpu: 200m
    memory: 256Mi
  limits:
    cpu: "1"
    memory: 512Mi

ingress:
  enabled: false
  className: traefik
  host: mountain-service.duckdns.org
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
  paths:
    - path: /api/v1/employees
      pathType: Prefix
    - path: /api/v1/login
      pathType: Exact
    - path: /api/v1/logout
      pathType: Exact
    - path: /api/v1/oauth
      pathType: Prefix

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 0
    maxUnavailable: 1

secrets:
  dbCommon: db-common
  dbService: employee-db
  cloudSQLSA: gcp-sa
  cloudSQLSAKey: key.json
  cloudSQLPrimarySecret: cloudsql-employee
  cloudSQLPrimaryKey: INSTANCE_CONNECTION_NAME
  cloudSQLReplica1Secret: cloudsql-employee-replica1
  cloudSQLReplica1Key: INSTANCE_CONNECTION_NAME
  cloudSQLReplica2Secret: cloudsql-employee-replica2
  cloudSQLReplica2Key: INSTANCE_CONNECTION_NAME

cloudSQL:
  image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.4
  # If using aggregated secret (cloudsql-instances), specify the three keys here
  primaryKey: EMPLOYEE_PRIMARY
  replica1Key: EMPLOYEE_REPLICA1
  replica2Key: EMPLOYEE_REPLICA2
  # Toggle to use aggregated secret vs per-instance secrets
  useAggregatedSecret: false

pgbouncer:
  image: ghcr.io/pd120424d/pgbouncer:1.24.1
  ports:
    primary: 6432
    replica1: 6433
    replica2: 6434
  proxyPorts:
    primary: 55432
    replica1: 56432
    replica2: 57432
  pool:
    pool_mode: transaction
    default_pool_size: 20
    min_pool_size: 5
    reserve_pool_size: 5
    auth_type: plain

appEnv:
  DB_HOST: 127.0.0.1
  GOMEMLIMIT: "400Mi"

  DB_PORT: "6432"
  DB_READ_HOST: 127.0.0.1
  DB_READ_PORT: "6433"
  DB_SSLMODE: disable
  REDIS_ADDR: redis:6379


podAnnotations: {}

nodeSelector: {}

tolerations: []

affinity: {}



# ServiceAccount used by employee-service to perform admin ops (restart deployments)
serviceAccount:
  create: true
  name: ""
  annotations: {}

# RBAC for restarting deployments
rbac:
  create: true
  allowedDeployments:
    - employee-service
    - urgency-service
    - activity-service
    - version-service
    - docs-aggregator
    - docs-ui
