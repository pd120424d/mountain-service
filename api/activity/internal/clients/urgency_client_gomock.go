// Code generated by MockGen. DO NOT EDIT.
// Source: urgency_client.go

// Package clients is a generated GoMock package.
package clients

import (
	"context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"

	urgencyV1 "github.com/pd120424d/mountain-service/api/contracts/urgency/v1"
)

// MockUrgencyClient is a mock of UrgencyClient interface.
type MockUrgencyClient struct {
	ctrl     *gomock.Controller
	recorder *MockUrgencyClientMockRecorder
}

// MockUrgencyClientMockRecorder is the mock recorder for MockUrgencyClient.
type MockUrgencyClientMockRecorder struct {
	mock *MockUrgencyClient
}

// NewMockUrgencyClient creates a new mock instance.
func NewMockUrgencyClient(ctrl *gomock.Controller) *MockUrgencyClient {
	mock := &MockUrgencyClient{ctrl: ctrl}
	mock.recorder = &MockUrgencyClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrgencyClient) EXPECT() *MockUrgencyClientMockRecorder { return m.recorder }

// GetUrgencyByID mocks base method.
func (m *MockUrgencyClient) GetUrgencyByID(ctx context.Context, id uint) (*urgencyV1.UrgencyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrgencyByID", ctx, id)
	ret0, _ := ret[0].(*urgencyV1.UrgencyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrgencyByID indicates an expected call of GetUrgencyByID.
func (mr *MockUrgencyClientMockRecorder) GetUrgencyByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrgencyByID", reflect.TypeOf((*MockUrgencyClient)(nil).GetUrgencyByID), ctx, id)
}

