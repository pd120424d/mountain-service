events {}

http {
    include mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # Serve Angular frontend
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Serve the Employee Swagger UI
        location /swagger/ {
            proxy_pass http://employee-service:8082/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            # Optional: Allow CORS if Swagger is accessed from elsewhere
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Employee Swagger JSON
        location /swagger.json {
            proxy_pass http://employee-service:8082/swagger.json;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Urgency Swagger UI
        location /urgency-swagger/ {
            proxy_pass http://urgency-service:8083/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Urgency Swagger JSON
        location /urgency-swagger.json {
            proxy_pass http://urgency-service:8083/swagger.json;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Proxy API requests to the employee service
        location ~ ^/api/v1/employees(/.*)?$ {
            proxy_pass http://employee-service:8082;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy API requests to the urgency service
        location ~ ^/api/v1/urgencies(/.*)?$ {
            proxy_pass http://urgency-service:8083;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location = /api/v1/login {
            proxy_pass http://employee-service:8082;
            proxy_http_version 1.1;
             proxy_set_header Host $host;
        }

        # Proxy version info
        location = /api/v1/version {
            proxy_pass http://version-service:8090;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
        
        location ~ ^/api/v1/shifts(/.*)?$ {
            proxy_pass http://employee-service:8082;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Admin routes for employee service
        location ~ ^/api/v1/admin/employees(/.*)?$ {
            proxy_pass http://employee-service:8082;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Admin routes for urgency service
        location ~ ^/api/v1/admin/urgencies(/.*)?$ {
            proxy_pass http://urgency-service:8083;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        
        # Catch-all for unhandled /api/v1/ routes
        location /api/v1/ {
            return 404;
        }
    }
}
