# NGINX Configuration for Staging/Development Environment
# Simple configuration without advanced security features
# Used for local development and staging deployments

events {}

http {
    include mime.types;
    default_type application/octet-stream;

    # Configure logging for frontend service
    access_log /var/log/frontend-access.log;
    error_log /var/log/frontend-error.log;

    # Define upstream servers

    upstream employee_service {
        server employee-service:8082;
    }

    upstream urgency_service {
        server urgency-service:8083;
    }

    upstream activity_service {
        server activity-service:8084;
    }

    upstream version_service {
        server version-service:8090;
    }

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        root /usr/share/nginx/html;
        index index.html;

        # Serve Angular frontend
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Serve the Employee Swagger UI
        location /employee-swagger/ {
            proxy_pass http://employee_service/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            # Optional: Allow CORS if Swagger is accessed from elsewhere
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Employee Swagger JSON
        location /employee-swagger.json {
            proxy_pass http://employee_service/swagger.json;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Urgency Swagger UI
        location /urgency-swagger/ {
            proxy_pass http://urgency_service/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Urgency Swagger JSON
        location /urgency-swagger.json {
            proxy_pass http://urgency_service/swagger.json;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Activity Swagger UI
        location /activity-swagger/ {
            proxy_pass http://activity_service/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Serve the Activity Swagger JSON
        location /activity-swagger.json {
            proxy_pass http://activity_service/swagger.json;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept";
        }

        # Proxy API requests to the employee service
        location ~ ^/api/v1/employees(/.*)?$ {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy API requests to the urgency service
        location ~ ^/api/v1/urgencies(/.*)?$ {
            proxy_pass http://urgency_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy API requests to the activity service
        location ~ ^/api/v1/activities(/.*)?$ {
            proxy_pass http://activity_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location = /api/v1/login {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
             proxy_set_header Host $host;
        }

        # OAuth2 token endpoint for Swagger UI
        location = /api/v1/oauth/token {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Proxy version info
        location = /api/v1/version {
            proxy_pass http://version_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location ~ ^/api/v1/shifts(/.*)?$ {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Admin routes for employee service
        location ~ ^/api/v1/admin/employees(/.*)?$ {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Admin routes for urgency service
        location ~ ^/api/v1/admin/urgencies(/.*)?$ {
            proxy_pass http://urgency_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Admin routes for activity service
        location ~ ^/api/v1/admin/activities(/.*)?$ {
            proxy_pass http://activity_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        
        # Catch-all for unhandled /api/v1/ routes
        location /api/v1/ {
            return 404;
        }
    }
}
