# Global directives (must be at top level)
user nginx;
worker_processes auto;
error_log /var/log/frontend-error.log warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration for frontend service
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr="$upstream_addr" upstream_status="$upstream_status"';

    # HTTP-level logging (access log only, error log is global)
    access_log /var/log/frontend-access.log main;

    # Basic nginx settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

    # Define upstream servers (using Docker service names for bridge networking)
    upstream employee_service {
        server employee-service:8082;
        keepalive 32;
    }

    upstream urgency_service {
        server urgency-service:8083;
        keepalive 32;
    }

    upstream activity_service {
        server activity-service:8084;
        keepalive 32;
    }

    upstream version_service {
        server version-service:8090;
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;

        # Client max body size for file uploads
        client_max_body_size 10M;

        # Health check endpoint for load balancer
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Serve Angular frontend
        root /usr/share/nginx/html;
        index index.html;

        # Static assets with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Angular frontend - catch all for client-side routing
        location / {
            try_files $uri $uri/ /index.html;
        }

        # === SWAGGER ENDPOINTS ===

        # Redirect no-trailing-slash to trailing slash (Swagger UI depends on it)
        location = /employee-swagger { return 301 /employee-swagger/; }
        location = /urgency-swagger  { return 301 /urgency-swagger/; }
        location = /activity-swagger { return 301 /activity-swagger/; }
        # Exact match: serve Swagger UI index with explicit spec URL
        location = /employee-swagger/ {
            proxy_pass http://employee_service/swagger/index.html?url=/employee-swagger/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            proxy_redirect off;
            proxy_redirect /swagger/ /employee-swagger/;

            proxy_set_header Accept-Encoding "";
        }

        location = /urgency-swagger/ {
            proxy_pass http://urgency_service/swagger/index.html?url=/urgency-swagger/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            proxy_redirect off;
            proxy_redirect /swagger/ /urgency-swagger/;

            proxy_set_header Accept-Encoding "";
        }

        location = /activity-swagger/ {
            proxy_pass http://activity_service/swagger/index.html?url=/activity-swagger/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            proxy_redirect off;
            proxy_redirect /swagger/ /activity-swagger/;

            proxy_set_header Accept-Encoding "";
        }


        # Employee Swagger UI
        location /employee-swagger/ {
            proxy_pass http://employee_service/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Ensure redirects from upstream /swagger/... land back under /employee-swagger/...
            proxy_redirect off;
            proxy_redirect /swagger/ /employee-swagger/;

            # Rewrite absolute asset/JSON paths in Swagger UI HTML and JS
            proxy_set_header Accept-Encoding "";
            sub_filter "/swagger/" "/employee-swagger/";
            # Normalize spec URL used by SwaggerUIBundle
            sub_filter 'url: "swagger.json"' 'url: "/employee-swagger/swagger.json"';
            sub_filter 'url: "./swagger.json"' 'url: "/employee-swagger/swagger.json"';
            sub_filter "url: 'swagger.json'" "url: '/employee-swagger/swagger.json'";
            sub_filter "url: './swagger.json'" "url: '/employee-swagger/swagger.json'";
            sub_filter_once off;
            sub_filter_types text/html application/javascript;
        }
        location = /employee-swagger/swagger.json {
            proxy_pass http://employee_service/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        location = /employee-swagger/doc.json {
            proxy_pass http://employee_service/swagger/doc.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Employee Swagger JSON (direct)
        location /employee-swagger.json {
            proxy_pass http://employee_service/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Urgency Swagger UI
        location /urgency-swagger/ {
            proxy_pass http://urgency_service/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            proxy_redirect off;
            proxy_redirect /swagger/ /urgency-swagger/;

            proxy_set_header Accept-Encoding "";
            sub_filter "/swagger/" "/urgency-swagger/";
            sub_filter 'url: "swagger.json"' 'url: "/urgency-swagger/swagger.json"';
            sub_filter 'url: "./swagger.json"' 'url: "/urgency-swagger/swagger.json"';
            sub_filter "url: 'swagger.json'" "url: '/urgency-swagger/swagger.json'";
            sub_filter "url: './swagger.json'" "url: '/urgency-swagger/swagger.json'";
            sub_filter_once off;
            sub_filter_types text/html application/javascript;
        }
        location = /urgency-swagger/swagger.json {
            proxy_pass http://urgency_service/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        location = /urgency-swagger/doc.json {
            proxy_pass http://urgency_service/swagger/doc.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Urgency Swagger JSON (direct)
        location /urgency-swagger.json {
            proxy_pass http://urgency_service/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Activity Swagger UI
        location /activity-swagger/ {
            proxy_pass http://activity_service/swagger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            proxy_redirect off;
            proxy_redirect /swagger/ /activity-swagger/;

            proxy_set_header Accept-Encoding "";
            sub_filter "/swagger/" "/activity-swagger/";
            sub_filter 'url: "swagger.json"' 'url: "/activity-swagger/swagger.json"';
            sub_filter 'url: "./swagger.json"' 'url: "/activity-swagger/swagger.json"';
            sub_filter "url: 'swagger.json'" "url: '/activity-swagger/swagger.json'";
            sub_filter "url: './swagger.json'" "url: '/activity-swagger/swagger.json'";
            sub_filter_once off;
            sub_filter_types text/html application/javascript;
        }
        location = /activity-swagger/swagger.json {
            proxy_pass http://activity_service/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
        location = /activity-swagger/doc.json {
            proxy_pass http://activity_service/swagger/doc.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Activity Swagger JSON (direct)
        location /activity-swagger.json {
            proxy_pass http://activity_service/swagger.json;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # === API ENDPOINTS ===

        # Login endpoint with special rate limiting
        location = /api/v1/login {
            limit_req zone=login burst=10 nodelay;
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # OAuth2 token endpoint for Swagger authentication
        location = /api/v1/oauth/token {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Logout endpoint
        location = /api/v1/logout {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoints
        location = /api/v1/health {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Version service endpoints
        location ~ ^/api/v1/version(/.*)?$ {
            proxy_pass http://version_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Employee service endpoints
        location ~ ^/api/v1/employees(/.*)?$ {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Shifts endpoints (handled by employee service)
        location ~ ^/api/v1/shifts(/.*)?$ {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Urgency service endpoints
        location ~ ^/api/v1/urgencies(/.*)?$ {
            proxy_pass http://urgency_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Activity service endpoints
        location ~ ^/api/v1/activities(/.*)?$ {
            proxy_pass http://activity_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Admin endpoints for employee service
        location ~ ^/api/v1/admin(/.*)?$ {
            proxy_pass http://employee_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


    }
}
