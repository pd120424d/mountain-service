name: Deploy to Kubernetes

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'ui/**'
      - 'k8s/**'
      - '.github/workflows/k8s-deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > ~/.kube/config


      - name: Ensure namespace exists
        run: |
          kubectl apply -f k8s/namespaces.yaml


      - name: Create/Update Secrets - DB Common (User/Port)
        run: |
          kubectl -n mountain create secret generic db-common \
            --from-literal=DB_USER='${{ secrets.DB_USER }}' \
            --from-literal=DB_PORT='${{ secrets.DB_PORT }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Secrets - Employee DB
        run: |
          kubectl -n mountain create secret generic employee-db \
            --from-literal=DB_HOST='${{ secrets.EMPLOYEE_DB_HOST }}' \
            --from-literal=DB_PASSWORD='${{ secrets.EMPLOYEE_DB_PASSWORD }}' \
            --from-literal=DB_NAME='${{ secrets.EMPLOYEE_DB_NAME }}' \
            --from-literal=DB_SSLMODE='${{ secrets.EMPLOYEE_DB_SSLMODE }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Secrets - Urgency DB
        run: |
          kubectl -n mountain create secret generic urgency-db \
            --from-literal=DB_HOST='${{ secrets.URGENCY_DB_HOST }}' \
            --from-literal=DB_PASSWORD='${{ secrets.URGENCY_DB_PASSWORD }}' \
            --from-literal=DB_NAME='${{ secrets.URGENCY_DB_NAME }}' \
            --from-literal=DB_SSLMODE='${{ secrets.URGENCY_DB_SSLMODE }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Secrets - Activity DB
        run: |
          kubectl -n mountain create secret generic activity-db \
            --from-literal=DB_HOST='${{ secrets.ACTIVITY_DB_HOST }}' \
            --from-literal=DB_PASSWORD='${{ secrets.ACTIVITY_DB_PASSWORD }}' \
            --from-literal=DB_NAME='${{ secrets.ACTIVITY_DB_NAME }}' \
            --from-literal=DB_SSLMODE="${{ secrets.ACTIVITY_DB_SSLMODE }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Secrets - App Shared
        run: |
          kubectl -n mountain create secret generic app-shared \
            --from-literal=JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            --from-literal=ADMIN_PASSWORD='${{ secrets.ADMIN_PASSWORD }}' \
            --from-literal=SERVICE_AUTH_SECRET='${{ secrets.SERVICE_AUTH_SECRET }}' \
            --from-literal=CORS_ALLOWED_ORIGINS='${{ secrets.CORS_ALLOWED_ORIGINS }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: (Optional) Create/Update Secrets - GCP Service Account
        if: ${{ secrets.GCP_SA_KEY != '' }}
        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > sa.json
          kubectl -n mountain create secret generic gcp-sa \
            --from-file=key.json=sa.json \
            --from-literal=GCP_PROJECT_ID='${{ secrets.GCP_PROJECT_ID }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: (Optional) Create/Update Secrets - Cloud SQL Instance Names
        if: ${{ secrets.CLOUDSQL_INSTANCE_EMPLOYEE != '' || secrets.CLOUDSQL_INSTANCE_URGENCY != '' || secrets.CLOUDSQL_INSTANCE_ACTIVITY != '' }}
        run: |
          kubectl -n mountain create secret generic cloudsql-employee \
            --from-literal=INSTANCE_CONNECTION_NAME='${{ secrets.CLOUDSQL_INSTANCE_EMPLOYEE }}' \
            --dry-run=client -o yaml | kubectl apply -f -
          kubectl -n mountain create secret generic cloudsql-urgency \
            --from-literal=INSTANCE_CONNECTION_NAME='${{ secrets.CLOUDSQL_INSTANCE_URGENCY }}' \
            --dry-run=client -o yaml | kubectl apply -f -
          kubectl -n mountain create secret generic cloudsql-activity \
            --from-literal=INSTANCE_CONNECTION_NAME='${{ secrets.CLOUDSQL_INSTANCE_ACTIVITY }}' \
            --dry-run=client -o yaml | kubectl apply -f -

        run: |
          echo '${{ secrets.GCP_SA_KEY }}' > sa.json
          kubectl -n mountain create secret generic gcp-sa \
            --from-file=key.json=sa.json \
            --from-literal=GCP_PROJECT_ID='${{ secrets.GCP_PROJECT_ID }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply manifests
        run: |
          kubectl apply -f k8s/namespaces.yaml
          kubectl -n mountain apply -f k8s/deployments/
          kubectl -n mountain apply -f k8s/services/
          kubectl -n mountain apply -f k8s/frontend/

