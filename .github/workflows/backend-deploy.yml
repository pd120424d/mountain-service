name: Backend Deploy to Azure VM

on:
  workflow_run:
    workflows: ["backend-test-coverage"]
    types:
      - completed

env:
  REGISTRY: ghcr.io
  VERSION_IMAGE_NAME: version-service
  GHCR_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/version-service

jobs:
  deploy:
    # only run if the workflow_run was triggered by a push, not a pull_request
    if: github.event_name == 'workflow_run' &&
        github.event.workflow_run.conclusion == 'success' &&
        github.event.workflow_run.event == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Fetch full git history and tags
        run: |
          git fetch --tags --unshallow || git fetch --tags

      - name: Get Git tag and SHA
        id: version
        run: |
          echo "VERSION=$(git describe --tags --abbrev=0 --match "v*" 2>/dev/null || echo dev)" >> $GITHUB_OUTPUT
          echo "GIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker images
        run: |
          docker build -t employee-service:latest -f ./api/employee/Dockerfile ./api
          docker build \
            -f api/version-service/Dockerfile \
            -t version-service:latest \
            --build-arg VERSION=${{ steps.version.outputs.VERSION }} \
            --build-arg GIT_SHA=${{ steps.version.outputs.GIT_SHA }} \
            ./api

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Tag and Push version-service image
        run: |
          docker tag version-service:latest ghcr.io/${{ github.repository_owner }}/version-service:${{ steps.version.outputs.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/version-service:${{ steps.version.outputs.VERSION }}

      - name: Save Docker images as tarballs
        run: |
          docker save employee-service:latest > employee.tar

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/github_actions
          chmod 600 ~/.ssh/github_actions
          ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

      - name: Copy Docker images to Azure VM
        run: |
          scp -i ~/.ssh/github_actions employee.tar ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:~

      - name: Load and run Docker containers on Azure VM
        run: |
          ssh -i ~/.ssh/github_actions ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} '
            set -e

            docker load < ~/employee.tar
            rm ~/employee.tar

            cd mountain-service

            echo "SWAGGER_API_URL=${{ secrets.SWAGGER_API_URL }}" > .env
            echo "CORS_ALLOWED_ORIGINS=http://${{ secrets.AZURE_VM_HOST }}:9082" >> .env
            echo "VERSION_SERVICE_IMAGE=ghcr.io/${{ github.repository_owner }}/version-service:${{ steps.version.outputs.VERSION }}" >> .env

            git pull origin main

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker pull $(grep VERSION_SERVICE_IMAGE .env | cut -d "=" -f2)

            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d
          '
