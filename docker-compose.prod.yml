version: "3.8"

services:
  employee-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: etf
      POSTGRES_DB: employee_service
    volumes:
      - db_data_prod:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  employee-service:
    image: employee-service:latest
    environment:
      - DB_HOST=employee-db
      - DB_PORT=5432
      - DB_USER_FILE=/run/secrets/db_user
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - DB_NAME=employee_service
      - APP_ENV=production
      - JWT_SECRET=super-secret-prod-key
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    depends_on:
      employee-db:
        condition: service_healthy
    ports:
      - "8082:8082"
    volumes:
      - /var/log:/var/log
    networks:
      - web
    secrets:
      - db_user
      - db_password
    restart: unless-stopped

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "9082:8080"
    environment:
      API_URL: "${SWAGGER_API_URL}"
    networks:
      - web
    restart: unless-stopped

  frontend:
    image: frontend:latest
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - employee-service
    networks:
      - web
    volumes:
      - /var/log:/var/log
    restart: unless-stopped

  version-service:
    image: ${VERSION_SERVICE_IMAGE}
    ports:
      - "8090:8090"

networks:
  web:

volumes:
  db_data_prod:

secrets:
  db_user:
    file: ./api/employee/secrets/db_user.txt
  db_password:
    file: ./api/employee/secrets/db_password.txt
