services:
  employee-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: etf
      POSTGRES_DB: employee_service
    volumes:
      - db_data_prod:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  urgency-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: etf
      POSTGRES_DB: urgency_service
    volumes:
      - urgency_db_data_prod:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  activity-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: etf
      POSTGRES_DB: activity_service
    volumes:
      - activity_db_data_prod:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  employee-service:
    image: ${EMPLOYEE_SERVICE_IMAGE}
    environment:
      - DB_HOST=employee-db
      - DB_PORT=5432
      - EMPLOYEE_DB_USER_FILE=/run/secrets/employee_db_user
      - EMPLOYEE_DB_PASSWORD_FILE=/run/secrets/employee_db_password
      - DB_NAME=employee_service
      - APP_ENV=production
      - JWT_SECRET=super-secret-prod-key
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SERVICE_AUTH_SECRET=${SERVICE_AUTH_SECRET}
    depends_on:
      employee-db:
        condition: service_healthy
    ports:
      - "8082:8082"
    volumes:
      - /var/log:/var/log
    networks:
      - web
    secrets:
      - employee_db_user
      - employee_db_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:8082/api/v1/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

  urgency-service:
    image: ${URGENCY_SERVICE_IMAGE}
    environment:
      - DB_HOST=urgency-db
      - DB_PORT=5432
      - URGENCY_DB_USER_FILE=/run/secrets/urgency_db_user
      - URGENCY_DB_PASSWORD_FILE=/run/secrets/urgency_db_password
      - DB_NAME=urgency_service
      - APP_ENV=production
      - JWT_SECRET=super-secret-prod-key
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - EMPLOYEE_SERVICE_URL=${EMPLOYEE_SERVICE_URL}
      - ACTIVITY_SERVICE_URL=${ACTIVITY_SERVICE_URL}
      - SERVICE_AUTH_SECRET=${SERVICE_AUTH_SECRET}
    depends_on:
      urgency-db:
        condition: service_healthy
    ports:
      - "8083:8083"
    volumes:
      - /var/log:/var/log
    networks:
      - web
    secrets:
      - urgency_db_user
      - urgency_db_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:8083/api/v1/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

  activity-service:
    image: ${ACTIVITY_SERVICE_IMAGE}
    environment:
      - DB_HOST=activity-db
      - DB_PORT=5432
      - ACTIVITY_DB_USER_FILE=/run/secrets/activity_db_user
      - ACTIVITY_DB_PASSWORD_FILE=/run/secrets/activity_db_password
      - DB_NAME=activity_service
      - APP_ENV=production
      - JWT_SECRET=super-secret-prod-key
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - SERVICE_AUTH_SECRET=${SERVICE_AUTH_SECRET}
    depends_on:
      activity-db:
        condition: service_healthy
    ports:
      - "8084:8084"
    volumes:
      - /var/log:/var/log
    networks:
      - web
    secrets:
      - activity_db_user
      - activity_db_password
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:8084/api/v1/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

  employee-swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "9082:8080"
    environment:
      API_URL: "${EMPLOYEE_SWAGGER_API_URL:-http://employee-service:8082/swagger.json}"
    networks:
      - web
    restart: unless-stopped

  urgency-swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "9083:8080"
    environment:
      API_URL: "${URGENCY_SWAGGER_API_URL:-http://urgency-service:8083/swagger.json}"
    networks:
      - web
    restart: unless-stopped

  activity-swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "9084:8080"
    environment:
      API_URL: "${ACTIVITY_SWAGGER_API_URL:-http://activity-service:8084/swagger.json}"
    networks:
      - web
    restart: unless-stopped

  frontend:
    image: frontend:latest
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    depends_on:
      employee-service:
        condition: service_healthy
      urgency-service:
        condition: service_healthy
      activity-service:
        condition: service_healthy
      version-service:
        condition: service_healthy
    networks:
      - web
    volumes:
      - /var/log:/var/log
    restart: unless-stopped

  version-service:
    image: ${VERSION_SERVICE_IMAGE}
    ports:
      - "8090:8090"
    volumes:
      - /var/log:/var/log
    networks:
      - web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-O", "/dev/null", "http://localhost:8090/api/v1/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  web:

volumes:
  db_data_prod:
  urgency_db_data_prod:
  activity_db_data_prod:

secrets:
  employee_db_user:
    file: ./api/employee/secrets/db_user.txt
  employee_db_password:
    file: ./api/employee/secrets/db_password.txt
  urgency_db_user:
    file: ./api/urgency/secrets/db_user.txt
  urgency_db_password:
    file: ./api/urgency/secrets/db_password.txt
  activity_db_user:
    file: ./api/activity/secrets/db_user.txt
  activity_db_password:
    file: ./api/activity/secrets/db_password.txt
